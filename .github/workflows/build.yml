name: Build N0N-OS UEFI Bootloader

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-unknown-uefi
        components: rust-src
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential nasm mtools dosfstools qemu-system-x86
        
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Check Rust formatting
      run: cargo fmt --check
      
    - name: Run Clippy lints
      run: cargo clippy --target x86_64-unknown-uefi -- -D warnings
      
    - name: Build bootloader
      run: cargo build --target x86_64-unknown-uefi --release
      
    - name: Build bootloader image
      run: make build
      
    - name: Verify UEFI binary
      run: |
        ls -la target/x86_64-unknown-uefi/release/
        file target/x86_64-unknown-uefi/release/nonos_boot.efi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nonos-bootloader
        path: |
          target/x86_64-unknown-uefi/release/nonos_boot.efi
          target/build/nonos.img
        retention-days: 30
        
  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-unknown-uefi
        components: rust-src
        
    - name: Cache Cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Run unit tests
      run: cargo test --lib
      
    - name: Run integration tests
      run: cargo test --test '*'
      
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Security audit
      run: cargo audit
      
    - name: Check for unsafe code
      run: |
        echo "Checking for unsafe blocks..."
        grep -r "unsafe" src/ || echo "No unsafe blocks found"