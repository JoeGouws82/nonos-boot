[package]
name = "nonos_boot"
version = "0.1.0"
edition = "2021"
publish = false
authors = ["eK <team@nonos.systems>"]
description = "NØN•OS Capsule Bootloader — UEFI stage-0 loader for zero-trust capsule execution"
license = "AGPL-3.0"
repository = "https://github.com/NON-OS/nonos-boot"
readme = "README.md"
documentation = "https://docs.nonos.systems"
keywords = ["bootloader", "uefi", "zk", "os", "capsule"]
categories = ["embedded", "no-std", "cryptography", "os"]

# Modern feature resolution across workspace
resolver = "2"

[[bin]]
name = "nonos_boot"
path = "src/main.rs"

[dependencies]
# UEFI stack
uefi = { version = "0.23", features = ["alloc"] }
uefi-services = "0.20"
r-efi = "4.0.0"

# Logging (firmware-safe; actual sink is internal)
log = "0.4"

# ELF parsing and zero-copy helpers
xmas-elf = "0.8"
zerocopy = "0.6"

# Measurements / hashing
sha2 = { version = "0.10", default-features = false }
blake3 = { version = "1.5", default-features = false, features = ["pure"] }

# Misc utilities
bitflags = "2.4"
uuid = { version = "1.6", default-features = false, features = ["macro-diagnostics"] }
bootloader_api = { version = "0.11", default-features = false }
heapless = { version = "0.8", default-features = false }

# Signature stack
# UEFI: ed25519-dalek v1 (u64 backend) to avoid SIMD/getrandom at firmware stage
[target.'cfg(target_os = "uefi")'.dependencies.ed25519-dalek]
version = "1.0"
default-features = false
features = ["u64_backend"]

# Non-UEFI (host tools/tests): ed25519-dalek v2
[target.'cfg(not(target_os = "uefi"))'.dependencies.ed25519-dalek]
version = "2.1"
default-features = false
features = ["rand_core"]

# Pin curve25519-dalek for UEFI (transitive in ed25519-dalek v1, but kept explicit for stability)
[target.'cfg(target_os = "uefi")'.dependencies.curve25519-dalek]
version = "3.2"
default-features = false
features = ["u64_backend"]

# ZK backend (arkworks Groth16); only compiled with `zk-groth16`
ark-std        = { version = "0.4", default-features = false, features = ["alloc"], optional = true }
ark-ff         = { version = "0.4", default-features = false, features = ["alloc"], optional = true }
ark-serialize  = { version = "0.4", default-features = false, features = ["alloc"], optional = true }
ark-bls12-381  = { version = "0.4", default-features = false, features = ["curve"], optional = true }
ark-groth16    = { version = "0.4", default-features = false, features = ["alloc"], optional = true }

# Optional: zeroize buffers after verification (defense-in-depth)
zeroize = { version = "1", default-features = false, features = ["alloc"], optional = true }

# Future/experimental SNARKs (disabled by default for UEFI)
halo2_proofs = { version = "0.2", optional = true }
snarkvm       = { version = "0.11", optional = true }

# Reserved target-specifics
[target.'cfg(uefi)'.dependencies]
# uefi-alloc = "0.1"

[features]
# Default runtime footprint for production boot; ZK is opt-in
default = ["logging"]

# Basic logging hook (internal firmware logger)
logging = []

# Firmware RNG bridge (if platform provides it)
efi-rng = []

# Hardening toggles (wire in code paths where applicable)
nonos-syscall-msr = []
nonos-cet = []

# Bring-up only (never enable in production)
mock-proof = []

# Groth16 verification (arkworks). To ship ZK MUST also enable `zk-vk-provisioned`
# and embed real PROGRAM_HASH_* / VK_* constants (generated by tools/zk-embed) in src/zk/registry.rs.
zk-groth16 = [
  "ark-std",
  "ark-ff",
  "ark-serialize",
  "ark-bls12-381",
  "ark-groth16",
]

# Compile-time assertion that verifying keys are embedded (see src/zk/registry.rs).
# Enable only AFTER replacing placeholder constants with real ones from tools/zk-embed.
zk-vk-provisioned = []

# Bind capsule commitment to signed manifest bytes instead of public inputs.
# If enabled, ensure manifest bytes are passed to ZkProof.
zk-bind-manifest = []

# Include lightweight test vector scaffolding (exclude in size-critical release builds)
zk-testvectors = []

# Zeroize proof/input buffers after verification
zk-zeroize = ["zeroize"]

# Experimental future paths (left disabled for UEFI)
# zk-snark    = ["halo2_proofs"]
# zk-snarkvm  = ["snarkvm"]

[build-dependencies]
cc = "1.0"
embed-manifest = "1.4.0"

[profile.release]
opt-level = "z"
lto = "fat"
panic = "abort"
strip = true
codegen-units = 1
debug = false
overflow-checks = false
incremental = false

[profile.dev]
opt-level = 1
debug = true
panic = "abort"
overflow-checks = true

[workspace]
members = ["tools/zk-embed"]
